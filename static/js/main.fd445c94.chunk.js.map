{"version":3,"sources":["components/ChartOverlay/ChartOverlay.module.css","components/CryptoTracker/Card.module.css","App.module.css","components/AddCrypto/CryptoListItem.module.css","components/AddCrypto/AddCrypto.module.css","components/CryptoTracker/MarketData.module.css","components/UI/ChartModal.module.css","components/UI/AddModal.module.css","components/Charts/HistoryChart.module.css","components/Charts/OhlcChart.module.css","components/UI/ChartIcon.module.css","components/CryptoTracker/Container.module.css","components/UI/Button.module.css","components/UI/Loader.module.css","components/UI/ErrorUI.module.css","components/AddCrypto/CryptoList.module.css","hooks/hooks.ts","config/config.ts","hooks/use-http.ts","helpers/helpers.ts","components/CryptoTracker/MarketData.tsx","components/Charts/HistoryChart.tsx","components/Charts/OhlcChart.tsx","models/drag&drop/drag&drop-models.ts","store/cryptocurrencies.ts","store/selected-chart.ts","components/UI/ChartIcon.tsx","components/ChartOverlay/ChartOverlay.tsx","components/UI/ChartModal.tsx","components/CryptoTracker/Card.tsx","components/CryptoTracker/Container.tsx","store/modal.ts","components/UI/Button.tsx","components/AddCrypto/CryptoListItem.tsx","components/UI/Loader.tsx","components/UI/ErrorUI.tsx","components/AddCrypto/CryptoList.tsx","components/AddCrypto/AddCrypto.tsx","components/UI/AddModal.tsx","store/fiat-currency.ts","App.tsx","store/redux.ts","index.tsx"],"names":["module","exports","useCustomDispatch","useDispatch","useCustomSelector","useSelector","SUPPORTED_CURRENCIES","SUPPORTED_INTERVALS","useHttp","useState","isLoading","setIsLoading","error","setError","fetchData","useCallback","requestConfig","filterFnc","a","fetch","url","response","ok","Error","json","data","message","getNumber","num","unit","Math","floor","toFixed","toString","length","r","abs","Number","MarketData","id","currency","state","fiat","fiatCurrency","marketData","setMarketData","change24h","changePerc24h","styles","setStyles","useEffect","dataObj","name","image","price","current_price","price_change_24h","price_change_percentage_24h","filteredData","marketCap","market_cap","circulatingSupply","circulating_supply","totalVolume","total_volume","replace","green","red","className","classes","container","src","alt","style","color","Chart","register","registerables","HistoryChart","cssClass","chart","useRef","prices","setPrices","dates","setDates","crypto","cryptocurrencies","filter","item","historyChart","options","interval","chartType","type","hex","rgb","m","g","b","substring","match","map","x","parseInt","join","hexToRgb","borderColor","lineBackgroundColor","barBackgroundColor","backgroundColor","formatOptions","labels","datasets","label","fill","canvasCallback","canvas","ctx","getContext","current","maintainAspectRatio","scales","time","minUnit","round","ticks","maxRotation","minRotation","grid","display","y","plugins","legend","title","text","chartData","chartLabels","value","push","pop","update","config","ref","CandlestickElement","CandlestickController","OhlcChart","setData","statePara","ohlcChart","i","open","high","low","close","o","h","l","c","ItemTypes","cryptoSlice","createSlice","initialState","reducers","updateCrypto","action","cryptos","payload","deepCryptos","cloneDeep","index","findIndex","splice","forEach","newCrypto","setCrypto","updateInterval","chartName","cryptoIndex","updateChartType","updateChartColor","cryptoActions","actions","selectedSlice","selectedChart","setDetail","selectedActions","ChartIcon","svg","d","ChartOverlay","selected","dispatch","selectedComponent","setSelectedComponent","intervalChangeHandler","isHistorySelected","isOhlcSelected","toolbar","dropdown","onChange","event","currentTarget","intervals","int","onClick","bind","Backdrop","props","backdrop","onClose","ChartModalOverlay","modal","portalElement","document","getElementById","ChartModal","ReactDOM","createPortal","Card","memo","moveCard","findCard","chartModalIsShown","setChartModalIsShown","originalIndex","useDrag","collect","monitor","isDragging","end","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","opacity","toggleModalHandler","prev","grabbable","node","toolbox","settings","href","Container","card","indexOf","atIndex","newCryptocurrencies","$splice","section","modalSlice","addModalIsShown","toggleAddModal","modalActions","Button","button","children","CryptoListItem","isChecked","defaultChecked","checkmark","Loader","ErrorUI","CryptoList","pagination","onCheckedCryptos","availableCryptos","setAvailableCryptos","changeHandler","prevState","includes","concat","list","AddCrypto","setPagination","checkedCryptos","setCheckedCryptos","onScroll","target","scrollHeight","scrollTop","clientHeight","header","AddModalOverlay","AddModal","fiatSlice","setFiatCurrency","fiatActions","App","DndProvider","backend","HTML5Backend","utility","store","configureStore","reducer","cryptoReducer","fiatReducer","modalReducer","selectedReducer","render"],"mappings":"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","file":"static/js/main.fd445c94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ChartOverlay_title__2fAoP\",\"toolbar\":\"ChartOverlay_toolbar__1ZuXi\",\"dropdown\":\"ChartOverlay_dropdown__38Pte\",\"color-input\":\"ChartOverlay_color-input__3JmTS\",\"intervals\":\"ChartOverlay_intervals__3O2R-\",\"picked-interval\":\"ChartOverlay_picked-interval__1ipJ3\",\"text\":\"ChartOverlay_text__1Agdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__1eXQX\",\"grabbable\":\"Card_grabbable__21ony\",\"toolbox\":\"Card_toolbox__kpSTg\",\"settings\":\"Card_settings__3vwDM\",\"close-button\":\"Card_close-button__1BVAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"App_toolbar__1q8Ru\",\"utility\":\"App_utility__E1T-N\",\"dropdown\":\"App_dropdown__2o4xY\",\"button\":\"App_button__niw2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"CryptoListItem_list-item__1fKkl\",\"label\":\"CryptoListItem_label__OWyTf\",\"checkmark\":\"CryptoListItem_checkmark__20Acz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddCrypto_container__2-eCR\",\"header\":\"AddCrypto_header__2yg4A\",\"button\":\"AddCrypto_button__1EaVo\",\"close\":\"AddCrypto_close__X7KzG\",\"close-button\":\"AddCrypto_close-button__1zYDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MarketData_container__3NEGI\",\"name\":\"MarketData_name__3WgY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ChartModal_backdrop__2A5Tq\",\"modal\":\"ChartModal_modal__2BqGD\",\"slide-down\":\"ChartModal_slide-down__2LTPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"AddModal_backdrop__22E4K\",\"modal\":\"AddModal_modal__3A7k1\",\"slide-down\":\"AddModal_slide-down__1-lIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-summary\":\"HistoryChart_chart-summary__2OcYI\",\"chart-detail\":\"HistoryChart_chart-detail__1zkLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-summary\":\"OhlcChart_chart-summary__1fdzl\",\"chart-detail\":\"OhlcChart_chart-detail__3IwYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"ChartIcon_svg__3t2bO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__YYafB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1mESR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-roller\":\"Loader_lds-roller__2jVTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ErrorUI_error__1iZil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CryptoList_list__3WK0t\"};","import { useDispatch, TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { Dispatch, RootState } from '../models/redux/redux-models';\r\n\r\n// https://redux.js.org/usage/usage-with-typescript\r\nexport const useCustomDispatch = () => useDispatch<Dispatch>();\r\nexport const useCustomSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export const SUPPORTED_CURRENCIES = [\r\n  'usd',\r\n  'eur',\r\n  'gbp',\r\n  'rub',\r\n  'jpy',\r\n  'aud',\r\n  'chf',\r\n];\r\n\r\nexport const SUPPORTED_INTERVALS = ['7', '14', '30', '90', '180', '365', 'max'];\r\n","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchData = useCallback(async (requestConfig, filterFnc) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(requestConfig.url);\r\n      if (!response.ok) throw new Error('Request failed! Please try again!');\r\n      const data = await response.json();\r\n      filterFnc(data);\r\n      // fix any type\r\n    } catch (err: any) {\r\n      setError(err.message || 'Something went wrong!');\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    fetchData,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","export const getNumber = (num: number) => {\r\n  var units = ['M', 'B', 'T', 'Q'];\r\n  var unit = Math.floor((num / 1.0e1).toFixed(0).toString().length);\r\n  var r = unit % 3;\r\n  var x = Math.abs(Number(num)) / Number('1.0e+' + (unit - r));\r\n  return x.toFixed(2) + units[Math.floor(unit / 3) - 2];\r\n};\r\n\r\n// add comma as thousand seperator\r\nexport const numberWithCommas = (num: number) => {\r\n  return num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n\r\n// convert hex to rgb\r\nexport const hexToRgb = (hex: any) => {\r\n  const rgb = hex\r\n    .replace(\r\n      /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\r\n      (m: any, r: any, g: any, b: any) => '#' + r + r + g + g + b + b\r\n    )\r\n    .substring(1)\r\n    .match(/.{2}/g)\r\n    .map((x: any) => parseInt(x, 16));\r\n\r\n  return [\r\n    'rgba(' + rgb.join(', ') + ', 1)',\r\n    'rgba(' + rgb.join(', ') + ', 0.2)',\r\n    'rgba(' + rgb.join(', ') + ', 0.7)',\r\n  ];\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useCustomSelector } from '../../hooks/hooks';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { getNumber, numberWithCommas } from '../../helpers/helpers';\r\nimport { MarketDataType } from '../../models/components/components-models';\r\nimport classes from './MarketData.module.css';\r\n\r\nconst MarketData: React.FC<{ id: string }> = ({ id }) => {\r\n  const currency = useCustomSelector(state => state.fiat.fiatCurrency);\r\n  const [marketData, setMarketData] = useState<MarketDataType>();\r\n  const [styles, setStyles] = useState<{\r\n    change24h: string;\r\n    changePerc24h: string;\r\n  }>({ change24h: '', changePerc24h: '' });\r\n\r\n  const { fetchData } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const filterData = (data: any) => {\r\n      const [dataObj] = data;\r\n      const {\r\n        id,\r\n        name,\r\n        image,\r\n        current_price: price,\r\n        price_change_24h: change24h,\r\n        price_change_percentage_24h: changePerc24h,\r\n        market_cap: marketCap,\r\n        circulating_supply: circulatingSupply,\r\n        total_volume: totalVolume,\r\n      } = dataObj;\r\n\r\n      const filteredData: MarketDataType = {\r\n        id,\r\n        name,\r\n        image,\r\n        price,\r\n        change24h,\r\n        changePerc24h,\r\n        marketCap,\r\n        circulatingSupply,\r\n        totalVolume,\r\n      };\r\n\r\n      filteredData.marketCap = getNumber(+filteredData.marketCap);\r\n      filteredData.price = numberWithCommas(+filteredData.price);\r\n      filteredData.circulatingSupply = getNumber(\r\n        +filteredData.circulatingSupply\r\n      );\r\n      filteredData.totalVolume = getNumber(+filteredData.totalVolume);\r\n\r\n      setMarketData(filteredData);\r\n\r\n      const green = 'rgb(110, 255, 174)',\r\n        red = 'rgb(241, 43, 66)';\r\n\r\n      setStyles({\r\n        change24h: change24h > 0 ? green : red,\r\n        changePerc24h: changePerc24h > 0 ? green : red,\r\n      });\r\n    };\r\n\r\n    fetchData(\r\n      {\r\n        url: `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${id}&order=market_cap_desc&per_page=1&page=1&sparkline=false`,\r\n      },\r\n      filterData\r\n    );\r\n  }, [id, currency, fetchData]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.name}>\r\n        <img src={marketData?.image} alt={`${marketData?.name} logo`} />\r\n        <p>{marketData?.name}</p>\r\n      </div>\r\n      <p>\r\n        Price: <span>{marketData?.price}</span>\r\n      </p>\r\n      <p>\r\n        Change:{' '}\r\n        <span style={{ color: styles.change24h }}>\r\n          {marketData?.change24h.toFixed(2)}\r\n        </span>\r\n      </p>\r\n      <p>\r\n        %Change:{' '}\r\n        <span style={{ color: styles.changePerc24h }}>\r\n          {marketData?.changePerc24h.toFixed(2)}%\r\n        </span>\r\n      </p>\r\n      <p>\r\n        Market Cap: <span>{marketData?.marketCap}</span>\r\n      </p>\r\n      <p>\r\n        Circulating Supply: <span>{marketData?.circulatingSupply}</span>\r\n      </p>\r\n      <p>\r\n        Total Volume: <span>{marketData?.totalVolume}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketData;\r\n","import { useEffect, useState, useRef, useCallback } from 'react';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { useCustomSelector } from '../../hooks/hooks';\r\nimport { hexToRgb } from '../../helpers/helpers';\r\nimport classes from './HistoryChart.module.css';\r\n\r\nimport { Chart, ChartData, registerables } from 'chart.js';\r\n\r\nChart.register(...registerables);\r\n\r\nconst HistoryChart: React.FC<{\r\n  id: string;\r\n  cssClass: string;\r\n}> = ({ id, cssClass }) => {\r\n  const chart = useRef<Chart | null>(null);\r\n  const [prices, setPrices] = useState<number[]>([]);\r\n  const [dates, setDates] = useState<number[]>([]);\r\n\r\n  const { fetchData } = useHttp();\r\n  const currency = useCustomSelector(state => state.fiat.fiatCurrency);\r\n  const [crypto] = useCustomSelector(state =>\r\n    state.crypto.cryptocurrencies.filter(item => item.id === id)\r\n  );\r\n\r\n  const { interval, type: chartType, color } = crypto.historyChart.options;\r\n\r\n  const [borderColor, lineBackgroundColor, barBackgroundColor] =\r\n    hexToRgb(color);\r\n\r\n  const backgroundColor =\r\n    chartType === 'bar' ? barBackgroundColor : lineBackgroundColor;\r\n\r\n  const formatOptions = useCallback(\r\n    (data: number[]): ChartData => ({\r\n      labels: dates,\r\n      datasets: [\r\n        {\r\n          label: 'Price',\r\n          data,\r\n          backgroundColor,\r\n          borderColor,\r\n          fill: true,\r\n          // pointRadius: 0,\r\n        },\r\n      ],\r\n    }),\r\n    [dates, backgroundColor, borderColor]\r\n  );\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    if (ctx) {\r\n      chart.current = new Chart(ctx, {\r\n        type: 'line',\r\n        data: formatOptions(prices),\r\n        options: {\r\n          // responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              type: 'time',\r\n              time: {\r\n                minUnit: 'day',\r\n                round: 'day',\r\n              },\r\n              ticks: {\r\n                // autoSkip: true,\r\n                // display: false,\r\n                // maxTicksLimit: 3,\r\n                maxRotation: 0,\r\n                minRotation: 0,\r\n              },\r\n              grid: {\r\n                display: false,\r\n              },\r\n              // bounds: 'ticks',\r\n              // offset: true,\r\n            },\r\n            y: {\r\n              grid: {\r\n                display: false,\r\n              },\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'History Chart',\r\n            },\r\n          },\r\n          // elements: {\r\n          //   point: {\r\n          //     radius: 0,\r\n          //   },\r\n          // },\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filterData = (data: any) => {\r\n      const chartData = [],\r\n        chartLabels = [];\r\n      for (const value of data.prices) {\r\n        const [dates, price] = value;\r\n        chartData.push(+price.toFixed(2));\r\n        chartLabels.push(dates);\r\n      }\r\n\r\n      // remove last item\r\n      chartData.pop();\r\n      chartLabels.pop();\r\n      setPrices(chartData);\r\n      setDates(chartLabels);\r\n    };\r\n\r\n    fetchData(\r\n      {\r\n        url: `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${interval}&interval=daily`,\r\n      },\r\n      filterData\r\n    );\r\n  }, [id, currency, fetchData, interval]);\r\n\r\n  useEffect(() => {\r\n    if (!chart.current) return;\r\n    chart.current.data = formatOptions(prices);\r\n    chart.current.update('none');\r\n  }, [formatOptions]);\r\n\r\n  // chart color change\r\n  useEffect(() => {\r\n    if (!chart.current) return;\r\n    chart.current.update('none');\r\n  }, [backgroundColor, borderColor]);\r\n\r\n  // on interval change, update prices and corresponding dates\r\n  useEffect(() => {\r\n    if (!chart.current) return;\r\n    chart.current.data = formatOptions(prices);\r\n    chart.current.update();\r\n  }, [prices, dates]);\r\n\r\n  // chart type change\r\n  useEffect(() => {\r\n    if (!chart.current) return;\r\n    chart.current.config.type = chartType;\r\n    chart.current.update();\r\n  }, [chartType]);\r\n\r\n  // default type is line, update on render based on redux state\r\n  useEffect(() => {\r\n    if (!chart.current) return;\r\n    chart.current.config.type = chartType;\r\n    chart.current.update();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes[`chart-${cssClass}`]}>\r\n      <canvas ref={canvasCallback} id={`history-chart-${id}`}></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryChart;\r\n","import { useEffect, useState, useCallback, useRef } from 'react';\r\n\r\nimport useHttp from '../../hooks/use-http';\r\nimport { useCustomSelector } from '../../hooks/hooks';\r\nimport classes from './OhlcChart.module.css';\r\n\r\nimport { Chart, ChartType, registerables, ChartData } from 'chart.js';\r\nimport {\r\n  CandlestickElement,\r\n  CandlestickController,\r\n} from 'chartjs-chart-financial';\r\n\r\n// @ts-ignore\r\nimport 'chartjs-adapter-moment';\r\n\r\nChart.register(CandlestickElement, CandlestickController);\r\nChart.register(...registerables);\r\n\r\nconst lineChartType: ChartType = 'candlestick';\r\n\r\nconst OhlcChart: React.FC<{\r\n  id: string;\r\n  cssClass: string;\r\n}> = ({ id, cssClass }) => {\r\n  const chart = useRef<Chart | null>(null);\r\n  const [data, setData] = useState<any[]>([]);\r\n\r\n  const { fetchData } = useHttp();\r\n  const currency = useCustomSelector(statePara => statePara.fiat.fiatCurrency);\r\n  const [crypto] = useCustomSelector(state =>\r\n    state.crypto.cryptocurrencies.filter(item => item.id === id)\r\n  );\r\n\r\n  const interval = crypto.ohlcChart.options.interval;\r\n\r\n  const formatOptions = (data: number[]): ChartData => ({\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const canvasCallback = useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    if (ctx) {\r\n      chart.current = new Chart(ctx, {\r\n        type: lineChartType,\r\n        data: formatOptions(data),\r\n        options: {\r\n          // responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                // display: false,\r\n                // maxTicksLimit: 3,\r\n                maxRotation: 0,\r\n                minRotation: 0,\r\n              },\r\n            },\r\n            y: {\r\n              grid: {\r\n                display: false,\r\n              },\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'OHLC Chart',\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filterData = (data: any) => {\r\n      const chartData: any[] = [];\r\n      for (let i = 0; i < data.length; i = i + 6) {\r\n        // data is from each 4 hours, filter to be once a day\r\n        const [time, open, high, low, close] = data[i];\r\n        chartData.push({ x: time, o: open, h: high, l: low, c: close });\r\n      }\r\n      setData(chartData);\r\n    };\r\n\r\n    fetchData(\r\n      {\r\n        url: `https://api.coingecko.com/api/v3/coins/${id}/ohlc?vs_currency=${currency}&days=${interval}`,\r\n      },\r\n      filterData\r\n    );\r\n  }, [id, currency, interval, fetchData]);\r\n\r\n  useEffect(() => {\r\n    if (chart.current) {\r\n      chart.current.data = formatOptions(data);\r\n      chart.current.update();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={classes[`chart-${cssClass}`]}>\r\n      <canvas ref={canvasCallback} id={`ohlc-chart-${id}`}></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OhlcChart;\r\n","export const ItemTypes = {\r\n  CARD: 'card',\r\n};\r\n\r\nexport interface CardType {\r\n  id: string;\r\n  moveCard: (id: string, to: number) => void;\r\n  findCard: (id: string) => { index: number };\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Cryptocurrency, Cryptocurrencies } from '../models/redux/redux-models';\r\n\r\nimport { ChartTypeRegistry } from 'chart.js';\r\n\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nconst initialCryptocurrencies: Cryptocurrencies = {\r\n  cryptocurrencies: [],\r\n};\r\n\r\nconst cryptoSlice = createSlice({\r\n  name: 'crypto',\r\n  initialState: initialCryptocurrencies,\r\n  reducers: {\r\n    updateCrypto(\r\n      state: Cryptocurrencies,\r\n      action: PayloadAction<Cryptocurrency[]>\r\n    ) {\r\n      const cryptos = state.cryptocurrencies,\r\n        payload = action.payload;\r\n\r\n      const deepCryptos = cloneDeep(cryptos);\r\n\r\n      for (let i = 0; i < cryptos.length; i++) {\r\n        const index = payload.findIndex(\r\n          crypto => crypto.id === deepCryptos[i].id\r\n        );\r\n        // if index exists, slice crypto from payload\r\n        if (index !== -1) payload.splice(index, 1);\r\n        // if crypto doesnt exists, slice it from state\r\n        else {\r\n          cryptos.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n\r\n      // push new cryptos from paylaod\r\n      payload.forEach(newCrypto => cryptos.push(newCrypto));\r\n    },\r\n\r\n    // for drag and drop functionality\r\n    setCrypto(\r\n      state: Cryptocurrencies,\r\n      action: PayloadAction<Cryptocurrency[]>\r\n    ) {\r\n      state.cryptocurrencies = action.payload;\r\n    },\r\n\r\n    updateInterval(\r\n      state: Cryptocurrencies,\r\n      action: PayloadAction<{ id: string; interval: string; chartName: string }>\r\n    ) {\r\n      const cryptos = state.cryptocurrencies;\r\n      const { id, interval, chartName } = action.payload;\r\n\r\n      const index = cryptos.findIndex(crypto => crypto.id === id);\r\n\r\n      const cryptoIndex = cryptos[index];\r\n      const { historyChart, ohlcChart } = cryptoIndex;\r\n\r\n      if (chartName === 'HistoryChart')\r\n        historyChart.options.interval = interval;\r\n      else ohlcChart.options.interval = interval;\r\n    },\r\n\r\n    updateChartType(\r\n      state: Cryptocurrencies,\r\n      action: PayloadAction<{ id: string; chartType: keyof ChartTypeRegistry }>\r\n    ) {\r\n      const cryptos = state.cryptocurrencies;\r\n      const { id, chartType } = action.payload;\r\n\r\n      const index = cryptos.findIndex(crypto => crypto.id === id);\r\n\r\n      const cryptoIndex = cryptos[index];\r\n      cryptoIndex.historyChart.options.type = chartType;\r\n    },\r\n\r\n    updateChartColor(\r\n      state: Cryptocurrencies,\r\n      action: PayloadAction<{ id: string; color: string }>\r\n    ) {\r\n      const cryptos = state.cryptocurrencies;\r\n      const { id, color } = action.payload;\r\n\r\n      const index = cryptos.findIndex(crypto => crypto.id === id);\r\n\r\n      const cryptoIndex = cryptos[index];\r\n      cryptoIndex.historyChart.options.color = color;\r\n    },\r\n  },\r\n});\r\n\r\nexport const cryptoActions = cryptoSlice.actions;\r\n\r\nexport default cryptoSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { SelectedChart } from '../models/redux/redux-models';\r\n\r\nconst initialSelectedState: SelectedChart = { selectedChart: 'HistoryChart' };\r\n\r\nconst selectedSlice = createSlice({\r\n  name: 'detail',\r\n  initialState: initialSelectedState,\r\n  reducers: {\r\n    setDetail(state: SelectedChart, action: PayloadAction<string>) {\r\n      state.selectedChart = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectedActions = selectedSlice.actions;\r\n\r\nexport default selectedSlice.reducer;\r\n","import classes from './ChartIcon.module.css';\r\n\r\nconst ChartIcon: React.FC = () => {\r\n  return (\r\n    <svg className={classes.svg}>\r\n      <path\r\n        fill=\"rgb(121, 131, 136)\"\r\n        d=\"M2.002 11.748c-.017-.376.1-.76.348-1.044.46-.526 1.2-.522 1.655.02l2.857 3.395 4.99-5.842c.218-.256.516-.4.826-.4.31 0 .61.143.828.4l2.526 2.943 3.765-5.513c.085-.176.203-.328.343-.444.463-.396 1.118-.344 1.53.15.22.267.33.61.33.955v12.268C22 19.39 21.473 20 20.824 20H3.176C2.526 20 2 19.39 2 18.636v-6.818c0-.023 0-.047.002-.07z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ChartIcon;\r\n","import { useState } from 'react';\r\nimport { useCustomDispatch, useCustomSelector } from '../../hooks/hooks';\r\nimport { SUPPORTED_INTERVALS } from '../../config/config';\r\nimport { cryptoActions } from '../../store/cryptocurrencies';\r\nimport HistoryChart from '../Charts/HistoryChart';\r\nimport OhlcChart from '../Charts/OhlcChart';\r\nimport { ChartTypeRegistry } from 'chart.js';\r\nimport ChartIcon from '../UI/ChartIcon';\r\nimport classes from './ChartOverlay.module.css';\r\n\r\nconst ChartOverlay: React.FC<{ id: string }> = ({ id }) => {\r\n  const selectedChart = useCustomSelector(\r\n    state => state.selected.selectedChart\r\n  );\r\n  const dispatch = useCustomDispatch();\r\n  const [selectedComponent, setSelectedComponent] =\r\n    useState<string>(selectedChart);\r\n\r\n  const [crypto] = useCustomSelector(state =>\r\n    state.crypto.cryptocurrencies.filter(item => item.id === id)\r\n  );\r\n\r\n  const { historyChart, ohlcChart } = crypto;\r\n\r\n  const interval =\r\n    selectedComponent === 'HistoryChart'\r\n      ? historyChart.options.interval\r\n      : ohlcChart.options.interval;\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedComponent(event.currentTarget.value);\r\n  };\r\n\r\n  const intervalChangeHandler = (interval: string) => {\r\n    dispatch(\r\n      cryptoActions.updateInterval({\r\n        interval,\r\n        id,\r\n        chartName: selectedComponent,\r\n      })\r\n    );\r\n  };\r\n\r\n  const typeChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    dispatch(\r\n      cryptoActions.updateChartType({\r\n        id,\r\n        chartType: event.currentTarget.value as keyof ChartTypeRegistry,\r\n      })\r\n    );\r\n  };\r\n\r\n  const colorChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(\r\n      cryptoActions.updateChartColor({\r\n        id,\r\n        color: event.currentTarget.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const isHistorySelected = selectedComponent === 'HistoryChart';\r\n  const isOhlcSelected = selectedComponent === 'OhlcChart';\r\n\r\n  return (\r\n    <>\r\n      <h2 className={classes.title}>{id}</h2>\r\n      <div className={classes.toolbar}>\r\n        <select\r\n          className={classes.dropdown}\r\n          value={selectedComponent}\r\n          onChange={changeHandler}\r\n        >\r\n          <option value=\"HistoryChart\">History Chart</option>\r\n          <option value=\"OhlcChart\">Ohlc Chart</option>\r\n        </select>\r\n        {isHistorySelected && (\r\n          <>\r\n            <ChartIcon />\r\n            <select\r\n              className={classes.dropdown}\r\n              value={historyChart.options.type}\r\n              onChange={typeChangeHandler}\r\n            >\r\n              <option value=\"line\">Line</option>\r\n              <option value=\"bar\">Bar</option>\r\n            </select>\r\n            <input\r\n              className={classes['color-input']}\r\n              type=\"color\"\r\n              value={historyChart.options.color}\r\n              onChange={colorChangeHandler}\r\n            />\r\n          </>\r\n        )}\r\n        <ul className={classes.intervals}>\r\n          {SUPPORTED_INTERVALS.map(int => (\r\n            <li\r\n              key={int}\r\n              value={int}\r\n              className={interval === int ? classes['picked-interval'] : ''}\r\n              onClick={intervalChangeHandler.bind(null, int)}\r\n            >\r\n              {int}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <p className={classes.text}>\r\n        All the changes you do here, will be saved and added to the 'My\r\n        cryptocurrencies' tab.\r\n      </p>\r\n      {isHistorySelected && <HistoryChart id={id} cssClass=\"detail\" />}\r\n      {isOhlcSelected && <OhlcChart id={id} cssClass=\"detail\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChartOverlay;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport classes from './ChartModal.module.css';\r\nimport Detail from '../ChartOverlay/ChartOverlay';\r\n\r\nconst Backdrop: React.FC<{ onClose: () => void }> = props => {\r\n  return <div className={classes.backdrop} onClick={props.onClose}></div>;\r\n};\r\n\r\nexport const ChartModalOverlay: React.FC<{ id: string }> = props => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <Detail id={props.id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays') as Element;\r\n\r\nconst ChartModal: React.FC<{ id: string; onClose: () => void }> = ({\r\n  id,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(<Backdrop onClose={onClose} />, portalElement)}\r\n      {ReactDOM.createPortal(<ChartModalOverlay id={id} />, portalElement)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChartModal;\r\n","import { memo, useState } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport MarketData from './MarketData';\r\nimport classes from './Card.module.css';\r\nimport HistoryChart from '../Charts/HistoryChart';\r\nimport OhlcChart from '../Charts/OhlcChart';\r\nimport { useCustomSelector, useCustomDispatch } from '../../hooks/hooks';\r\n\r\nimport { ItemTypes, CardType } from '../../models/drag&drop/drag&drop-models';\r\nimport { cryptoActions } from '../../store/cryptocurrencies';\r\nimport { selectedActions } from '../../store/selected-chart';\r\nimport ChartModal from '../UI/ChartModal';\r\n\r\nconst Card: React.FC<CardType> = memo(({ id, moveCard, findCard }) => {\r\n  const [chartModalIsShown, setChartModalIsShown] = useState<boolean>(false);\r\n  const dispatch = useCustomDispatch();\r\n  const cryptocurrencies = useCustomSelector(\r\n    state => state.crypto.cryptocurrencies\r\n  );\r\n  const originalIndex = findCard(id).index;\r\n  const [{ isDragging }, drag] = useDrag(\r\n    () => ({\r\n      type: ItemTypes.CARD,\r\n      item: { id, originalIndex },\r\n      collect: monitor => ({\r\n        isDragging: monitor.isDragging(),\r\n      }),\r\n      end: (item, monitor) => {\r\n        const { id: droppedId, originalIndex } = item;\r\n        const didDrop = monitor.didDrop();\r\n        if (!didDrop) moveCard(droppedId, originalIndex);\r\n      },\r\n    }),\r\n    [id, originalIndex, moveCard]\r\n  );\r\n\r\n  const [, drop] = useDrop(\r\n    () => ({\r\n      accept: ItemTypes.CARD,\r\n      canDrop: () => false,\r\n      hover({ id: draggedId }: { id: string }) {\r\n        if (draggedId !== id) {\r\n          const { index: overIndex } = findCard(id);\r\n          moveCard(draggedId, overIndex);\r\n        }\r\n      },\r\n    }),\r\n    [findCard, moveCard]\r\n  );\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  const removeItemHandler = (id: string) => {\r\n    dispatch(\r\n      cryptoActions.setCrypto(cryptocurrencies.filter(item => item.id !== id))\r\n    );\r\n  };\r\n\r\n  const toggleModalHandler = () => {\r\n    setChartModalIsShown(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.container} ${classes.grabbable}`}\r\n      ref={node => drag(drop(node))}\r\n      style={{ opacity }}\r\n    >\r\n      <MarketData id={id} />\r\n      <div\r\n        onClick={() => {\r\n          toggleModalHandler();\r\n          dispatch(selectedActions.setDetail('HistoryChart'));\r\n        }}\r\n      >\r\n        <HistoryChart id={id} cssClass=\"summary\" />\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          toggleModalHandler();\r\n          dispatch(selectedActions.setDetail('OhlcChart'));\r\n        }}\r\n      >\r\n        <OhlcChart id={id} cssClass=\"summary\" />\r\n      </div>\r\n      <div className={classes.toolbox}>\r\n        <div className={classes.settings} onClick={toggleModalHandler}></div>\r\n        {chartModalIsShown && (\r\n          <ChartModal id={id} onClose={toggleModalHandler} />\r\n        )}\r\n        <a\r\n          href=\"#\"\r\n          className={classes['close-button']}\r\n          onClick={removeItemHandler.bind(null, id)}\r\n        ></a>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Card;\r\n","import { memo, useCallback } from 'react';\r\nimport { useCustomSelector } from '../../hooks/hooks';\r\nimport { useCustomDispatch } from '../../hooks/hooks';\r\nimport Card from './Card';\r\nimport { useDrop } from 'react-dnd';\r\nimport { cryptoActions } from '../../store/cryptocurrencies';\r\nimport { ItemTypes } from '../../models/drag&drop/drag&drop-models';\r\nimport classes from './Container.module.css';\r\n\r\nimport update from 'immutability-helper';\r\n\r\nconst Container: React.FC = memo(() => {\r\n  const cryptocurrencies = useCustomSelector(\r\n    state => state.crypto.cryptocurrencies\r\n  );\r\n  const dispatch = useCustomDispatch();\r\n\r\n  const [, drop] = useDrop(() => ({ accept: ItemTypes.CARD }));\r\n\r\n  const findCard = useCallback(\r\n    (id: string) => {\r\n      const [card] = cryptocurrencies.filter(c => `${c.id}` === id);\r\n      return {\r\n        card,\r\n        index: cryptocurrencies.indexOf(card),\r\n      };\r\n    },\r\n    [cryptocurrencies]\r\n  );\r\n\r\n  const moveCard = useCallback(\r\n    (id: string, atIndex: number) => {\r\n      const { card, index } = findCard(id);\r\n      const newCryptocurrencies = update(cryptocurrencies, {\r\n        $splice: [\r\n          [index, 1],\r\n          [atIndex, 0, card],\r\n        ],\r\n      });\r\n      dispatch(cryptoActions.setCrypto(newCryptocurrencies));\r\n    },\r\n    [findCard, dispatch, cryptocurrencies]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.section} ref={drop}>\r\n      {cryptocurrencies.map(item => (\r\n        <Card\r\n          key={item.id}\r\n          id={item.id}\r\n          moveCard={moveCard}\r\n          findCard={findCard}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Container;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { AddModal } from '../models/redux/redux-models';\r\n\r\nconst initialModal: AddModal = {\r\n  addModalIsShown: true,\r\n};\r\n\r\nconst modalSlice = createSlice({\r\n  name: 'modal',\r\n  initialState: initialModal,\r\n  reducers: {\r\n    toggleAddModal(state: AddModal) {\r\n      state.addModalIsShown = !state.addModalIsShown;\r\n    },\r\n  },\r\n});\r\n\r\nexport const modalActions = modalSlice.actions;\r\n\r\nexport default modalSlice.reducer;\r\n","import classes from './Button.module.css';\r\n\r\nconst Button: React.FC<{ onClick: () => void; cssClass: string | null }> =\r\n  props => {\r\n    return (\r\n      <button\r\n        className={`${classes.button} ${props.cssClass}`}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.children}\r\n      </button>\r\n    );\r\n  };\r\n\r\nexport default Button;\r\n","import { CryptoItem } from '../../models/components/components-models';\r\nimport classes from './CryptoListItem.module.css';\r\n\r\nconst CryptoListItem: React.FC<CryptoItem> = props => {\r\n  const { id, name, image, onChange, isChecked } = props;\r\n\r\n  return (\r\n    <li className={classes['list-item']}>\r\n      <label className={classes.label}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={id}\r\n          onChange={onChange.bind(null, id)}\r\n          defaultChecked={isChecked}\r\n        />\r\n        <span className={classes.checkmark}></span>\r\n        <img src={image} alt={`${name} logo`} />\r\n        <p>{name}</p>\r\n      </label>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CryptoListItem;\r\n","import classes from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={classes['lds-roller']}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import classes from './ErrorUI.module.css';\r\n\r\nconst ErrorUI: React.FC<{ message: string }> = props => {\r\n  return (\r\n    <section className={classes.error}>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ErrorUI;\r\n","import { useEffect, useState } from 'react';\r\nimport { useCustomSelector } from '../../hooks/hooks';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { CryptoBasic } from '../../models/components/components-models';\r\nimport CryptoListItem from './CryptoListItem';\r\nimport Loader from '../UI/Loader';\r\nimport ErrorUI from '../UI/ErrorUI';\r\nimport classes from './CryptoList.module.css';\r\n\r\nconst CryptoList: React.FC<{\r\n  pagination: number;\r\n  onCheckedCryptos: React.Dispatch<React.SetStateAction<string[]>>;\r\n}> = ({ pagination, onCheckedCryptos }) => {\r\n  const cryptocurrencies = useCustomSelector(\r\n    state => state.crypto.cryptocurrencies\r\n  );\r\n  // list of all cryptos from api\r\n  const [availableCryptos, setAvailableCryptos] = useState<CryptoBasic[]>([]);\r\n  const { isLoading, error, fetchData } = useHttp();\r\n\r\n  const changeHandler = (id: string) => {\r\n    onCheckedCryptos(prevState => {\r\n      if (!prevState.includes(id)) return [...prevState, id];\r\n      return prevState.filter(item => item !== id);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filterData = (data: any) => {\r\n      const filteredData = data.map(({ id, name, image }: CryptoBasic) => ({\r\n        id,\r\n        name,\r\n        image,\r\n      }));\r\n      setAvailableCryptos(prev => prev.concat(filteredData));\r\n    };\r\n\r\n    fetchData(\r\n      {\r\n        url: `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=${pagination}&sparkline=false`,\r\n      },\r\n      filterData\r\n    );\r\n  }, [pagination, fetchData]);\r\n\r\n  if (error) return <ErrorUI message={error} />;\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {availableCryptos.map(item => (\r\n        <CryptoListItem\r\n          key={item.id}\r\n          id={item.id}\r\n          name={item.name}\r\n          image={item.image}\r\n          isChecked={cryptocurrencies.map(item => item.id).includes(item.id)}\r\n          onChange={changeHandler}\r\n        />\r\n      ))}\r\n      {isLoading && <Loader />}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CryptoList;\r\n","import { useState } from 'react';\r\nimport { useCustomSelector, useCustomDispatch } from '../../hooks/hooks';\r\nimport Button from '../UI/Button';\r\nimport CryptoList from './CryptoList';\r\nimport { cryptoActions } from '../../store/cryptocurrencies';\r\nimport { modalActions } from '../../store/modal';\r\nimport classes from './AddCrypto.module.css';\r\n\r\nconst AddCrypto: React.FC = () => {\r\n  const dispatch = useCustomDispatch();\r\n  const cryptocurrencies = useCustomSelector(\r\n    state => state.crypto.cryptocurrencies\r\n  );\r\n  const [pagination, setPagination] = useState<number>(1);\r\n  // picked cryptos\r\n  const [checkedCryptos, setCheckedCryptos] = useState<string[]>(\r\n    cryptocurrencies.map(item => item.id)\r\n  );\r\n\r\n  const addCryptoHandler = () => {\r\n    dispatch(\r\n      cryptoActions.updateCrypto(\r\n        checkedCryptos.map(crypto => ({\r\n          id: crypto,\r\n          historyChart: {\r\n            options: {\r\n              interval: '14',\r\n              type: 'line',\r\n              color: '#8c3f4f',\r\n              // backgroundColor: 'rgba(140, 63, 79, 0.2)',\r\n            },\r\n          },\r\n          ohlcChart: {\r\n            options: {\r\n              interval: '14',\r\n            },\r\n          },\r\n        }))\r\n      )\r\n    );\r\n    dispatch(modalActions.toggleAddModal());\r\n  };\r\n\r\n  const scrollHandler = (event: React.UIEvent<HTMLDivElement>) => {\r\n    const target = event.currentTarget;\r\n    if (target.scrollHeight - target.scrollTop === target.clientHeight)\r\n      setPagination(prev => prev + 1);\r\n  };\r\n\r\n  //  <div className={classes.close}>\r\n  //   <a href=\"#\" className={classes['close-button']} onClick={onClose}></a>\r\n  // </div>\r\n  return (\r\n    <>\r\n      <div className={classes.container} onScroll={scrollHandler}>\r\n        <div className={classes.header}>\r\n          <h2>Add a cryptocurrency</h2>\r\n          <p>\r\n            Add a cryptocurrencies you would like to track. We'll add it to your\r\n            personalized tab. You can always sort them as you like with drag and\r\n            drop.\r\n          </p>\r\n        </div>\r\n        <CryptoList\r\n          pagination={pagination}\r\n          onCheckedCryptos={setCheckedCryptos}\r\n        />\r\n      </div>\r\n      <Button onClick={addCryptoHandler} cssClass={classes.button}>\r\n        Add a Cryptocurrency\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCrypto;\r\n","import ReactDOM from 'react-dom';\r\nimport { useCustomDispatch } from '../../hooks/hooks';\r\nimport { modalActions } from '../../store/modal';\r\nimport AddCrypto from '../AddCrypto/AddCrypto';\r\nimport classes from './AddModal.module.css';\r\n\r\nconst Backdrop: React.FC = () => {\r\n  const dispatch = useCustomDispatch();\r\n  return (\r\n    <div\r\n      className={classes.backdrop}\r\n      onClick={dispatch.bind(null, modalActions.toggleAddModal())}\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst AddModalOverlay: React.FC = () => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <AddCrypto />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays') as Element;\r\n\r\nconst AddModal: React.FC = () => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(<Backdrop />, portalElement)}\r\n      {ReactDOM.createPortal(<AddModalOverlay />, portalElement)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddModal;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { FiatCurrency } from '../models/redux/redux-models';\r\n\r\nconst initialFiatState: FiatCurrency = { fiatCurrency: 'usd' };\r\n\r\nconst fiatSlice = createSlice({\r\n  name: 'fiat',\r\n  initialState: initialFiatState,\r\n  reducers: {\r\n    setFiatCurrency(state: FiatCurrency, action: PayloadAction<string>) {\r\n      state.fiatCurrency = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const fiatActions = fiatSlice.actions;\r\n\r\nexport default fiatSlice.reducer;\r\n","import { useCustomDispatch, useCustomSelector } from './hooks/hooks';\nimport { SUPPORTED_CURRENCIES } from './config/config';\nimport Container from './components/CryptoTracker/Container';\nimport AddModal from './components/UI/AddModal';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { modalActions } from './store/modal';\nimport { fiatActions } from './store/fiat-currency';\nimport classes from './App.module.css';\n\nconst App: React.FC = () => {\n  const {\n    crypto: { cryptocurrencies },\n    modal: { addModalIsShown },\n  } = useCustomSelector(state => state);\n  const dispatch = useCustomDispatch();\n\n  const currencyChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(fiatActions.setFiatCurrency(event.currentTarget.value));\n  };\n\n  const toggleModalHandler = () => {\n    dispatch(modalActions.toggleAddModal());\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      {addModalIsShown && <AddModal />}\n      <div className={classes.toolbar}>\n        <p>My cryptocurrencies({cryptocurrencies.length})</p>\n        <div className={classes.utility}>\n          <label>\n            <select onChange={currencyChange} className={classes.dropdown}>\n              {SUPPORTED_CURRENCIES.map(item => (\n                <option key={item}>{item}</option>\n              ))}\n            </select>\n          </label>\n          <a className={classes.button} onClick={toggleModalHandler}>\n            +Add a cryptocurrency\n          </a>\n        </div>\n      </div>\n      <Container />\n    </DndProvider>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport fiatReducer from './fiat-currency';\r\nimport cryptoReducer from './cryptocurrencies';\r\nimport modalReducer from './modal';\r\nimport selectedReducer from './selected-chart';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    crypto: cryptoReducer,\r\n    fiat: fiatReducer,\r\n    modal: modalReducer,\r\n    selected: selectedReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}